using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.690.0+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.690.0.aarch64-linux-gnu.tar.gz", "891150d716bb370120d572e6537190ab9b318ca2f607e95e676017de31dc470a"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.690.0.aarch64-linux-musl.tar.gz", "ddda73170fe1d97bfedcbd75adfa12f538c352fe6cf51bc37899a73feb387bd4"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.690.0.armv7l-linux-gnueabihf.tar.gz", "75d881d37da45b8cb30b60adb7d7f53a853731e308dd8c399890279664a957f9"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.690.0.armv7l-linux-musleabihf.tar.gz", "4540e4b263217a1807095a7a245273c74b231602b1e84664c2db726396d21beb"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.690.0.i686-linux-gnu.tar.gz", "2bf343cd9d512a2dee52970478c297ac65c9964922b738ddb04502aeba76eea8"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.690.0.i686-linux-musl.tar.gz", "d595ed3704ef23edf370cc8ed149267fde1d430ffe3ea8fb32236b33738a0f92"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.690.0.i686-w64-mingw32.tar.gz", "56aa9bd868490ef089e5d5aa41137a0a4a88bea4175235966588d012b6576ec6"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.690.0.powerpc64le-linux-gnu.tar.gz", "813e1ca84ec3ef598c3890f9e2959964e155da7ba1c731901109b7ae2dfc1bd9"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.690.0.x86_64-apple-darwin.tar.gz", "04e7207005c8f320ba64efc3b0a70281ed2eca6d51f3980db682859e6d00f866"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.690.0.x86_64-linux-gnu.tar.gz", "6bf277efe95a567f2f67ebca7636bbf42dda5b965cdd4dd9a10d75354cd0d8bc"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.690.0.x86_64-linux-musl.tar.gz", "fd174bf6cf55514f7572c63bde7025b308a6ee3e78f0fbc5de6e11a7a76b2fe0"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.690.0.x86_64-unknown-freebsd.tar.gz", "15449c19e651396492de16f8c2063f3fb7998abba2808fbb48f83300debfacde"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.690.0.x86_64-w64-mingw32.tar.gz", "52f3a0feb860ace911a3ef9a4817a81c0885c48e5606396b59dc6ecb676b56a8"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
