using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.800.300+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.300.aarch64-linux-gnu.tar.gz", "ce0579da76180ea292743ef144951a25360175dfb50981cb677863cbc027098e"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.300.aarch64-linux-musl.tar.gz", "cfff2ca527c2a098db4e85301cf3619a14fcc89d1ba0d7fe6232c5ae23fe2153"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.300.armv7l-linux-gnueabihf.tar.gz", "7fc98f5642002fbf46e3f95ff6150caf0d1eab6cc94ca45b9a44149c257b3074"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.300.armv7l-linux-musleabihf.tar.gz", "021721bfaf3bd15e208303535508beb8fc6b4ef5f8fb5b6bd0f06d2060e493f2"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.300.i686-linux-gnu.tar.gz", "e8bb2767117cf100606fe8b8efa533862fba30474aafac4065ccd000133faba8"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.800.300.i686-linux-musl.tar.gz", "e4ab8a5f66343f3f1f5ff31bb7cac7201f48a0a5a5811f61f22f42a739c7932a"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.800.300.i686-w64-mingw32.tar.gz", "d5ac4d9711af329998b6a2fc6fc1938c9051cb29c9f27c17fb99466691686bf6"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.300.powerpc64le-linux-gnu.tar.gz", "b99dfd64b17085c4c81ee8b352aa5808f77e05aa6ec11792f971e39fe9df74b9"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.800.300.x86_64-apple-darwin.tar.gz", "368b536176b5894d250398227b22d41e21c43f5cd3bcf669047d12698775ab35"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.300.x86_64-linux-gnu.tar.gz", "1e7e0f343bb6df65bbf3449cfa274c03348880587f00eb0f0b7225d9efc2e1f7"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.300.x86_64-linux-musl.tar.gz", "eb4fe34884db4a6fd7137548cc7a0a59ebf89b2350087db96652ecd0a3dbaae1"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.800.300.x86_64-unknown-freebsd.tar.gz", "0425a4e05253a68d1dd51f61cf2105c426fe8c5561baff91608cd22cfe873196"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.800.300.x86_64-w64-mingw32.tar.gz", "f5e32c4e71228c784cbb943d2eeba82475f76be5884a0116f770aa3852f3c2ba"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
