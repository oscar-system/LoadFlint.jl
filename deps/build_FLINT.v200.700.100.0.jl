using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.700.100+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.100.aarch64-linux-gnu.tar.gz", "363d05fa60250b8a8f79f1726de52665881666a04ef693e2b1727d39d4941a3a"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.700.100.aarch64-linux-musl.tar.gz", "f117cf79298eeac20ccf294cce2968a8a5707ad2ab6025283b20286ade4a4a8c"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.700.100.armv7l-linux-gnueabihf.tar.gz", "b10e35a11df042d3b0d3e2569e208a4a2b6fd2b3fcc88a042f4af6397f5a0c0e"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.700.100.armv7l-linux-musleabihf.tar.gz", "7a65affcd258ab4fd443368ebe6efea51b092480ad3f02ff8020c9c97b03bcea"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.100.i686-linux-gnu.tar.gz", "4f8720e0576c4c2c9005934cde155a4a98874a36e710d38b4921d87e976ce67c"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.700.100.i686-linux-musl.tar.gz", "580bf01d15da8c83fdd29ca67194446f236f6f32a9eb5fc3b80b07d558ca6b1e"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.700.100.i686-w64-mingw32.tar.gz", "95b795d6aaa4ca53babd564d309e354152d776a8f66eed3ccb2f927b94c481e7"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.100.powerpc64le-linux-gnu.tar.gz", "3ed75292615cef3ceb298decf740bbea0aeadd445c0f68e861a5a2c1d57d46d0"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.700.100.x86_64-apple-darwin.tar.gz", "a1917f95bf8797a5821377fb83901c147b5fb4394731a57e4f20d100a2e85997"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.100.x86_64-linux-gnu.tar.gz", "2a94a435df4d90d3c8acf5cd62529d19b2f560bd9efb235a57e446b17506ebde"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.700.100.x86_64-linux-musl.tar.gz", "9d0170eff0bae42c0d89b0d3bba7bc083152551913941fd264351bfdb074f48a"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.700.100.x86_64-unknown-freebsd.tar.gz", "0c57427b26c55b942213b5278a1772624607c9b61ccfd1bfbd899ee93e7e2d33"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.700.100.x86_64-w64-mingw32.tar.gz", "bafc6fba034b61ddf1b87c89871d698235f75b2558bce78af65d59b712355c2b"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
