using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.800.0+1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.aarch64-linux-gnu.tar.gz", "44e901e79f2cb553c9aaef8e4c9a7f7cc038e22b8d11b9dd0c133043d364e018"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.aarch64-linux-musl.tar.gz", "38bc8d8d9e50c221e70cefaf423c5859199739c479b4bd444434caa790c0d747"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.0.armv7l-linux-gnueabihf.tar.gz", "e104acf4a8ad41dabf684e26f2b5f41ff0d66b0e93cb679d45bab2a70d721366"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.0.armv7l-linux-musleabihf.tar.gz", "58e6b18478e03c42480cbbb2bf3a8ea8dc85da8dc935b95ce95b814ac81e43e9"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.i686-linux-gnu.tar.gz", "8230947cd6263d392cc85210431b6bb09460195897e7b857cacc6bf168e9befb"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.i686-linux-musl.tar.gz", "8d1b8a6afdee954296773743f3395711489c825ae7210303b7c1746f3c0c66cb"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.800.0.i686-w64-mingw32.tar.gz", "f63ad8e6c0dfd2735898bd37adafba2b596e8e5afdac66d7154e669a1672012e"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.powerpc64le-linux-gnu.tar.gz", "7d78618bcd315df782395b52697dbdedacb98896383cd542f4bb376a32036ae6"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-apple-darwin.tar.gz", "1a5f2d12bde03e5049053df3cf8d94a6007afedd68a9470f24b0ab3c1df49366"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.x86_64-linux-gnu.tar.gz", "c2a2339d2981ec8b3f7530ccbed4853233fe1e79fa7217f65823c64d8765b50e"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.x86_64-linux-musl.tar.gz", "a172acddd32cfa29e88c6cc03f721ce6d0ed8d3832176cd281683ce9233e92d2"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-unknown-freebsd.tar.gz", "c2e0f58fb544beb0f83b57787b89057bf9e8949da76062e901a8ccb1fa734507"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-w64-mingw32.tar.gz", "6353f794f418ae9f8f588748e74f6a42b7af6d18ba73ad2bbba68be623461c93"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
