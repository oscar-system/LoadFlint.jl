using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.800.0+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.aarch64-linux-gnu.tar.gz", "357d46781fbe5bccaecae31af461acac7e0f3363fb73d6469544f4a58a496fc9"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.aarch64-linux-musl.tar.gz", "4afc1420580b040e2e46018e14d33fad61953d1f62d52323fdfd00846121ebe3"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.0.armv7l-linux-gnueabihf.tar.gz", "e8cff8f86151a888e87c5374ec94d992663854d270c3f22611ce009e6dcb4df7"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.0.armv7l-linux-musleabihf.tar.gz", "d12d14dbee5d2a7da0f67888255eb46a04d514d9666da414114db3c7b1261919"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.i686-linux-gnu.tar.gz", "a209e1153f57f895a52f9bb47657265b1f4652e9d69724f6e16c5f0dcf280d39"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.i686-linux-musl.tar.gz", "5719ce61639902d9527865ea2c00ec04adfac0d23f17916e65f5bceb6e00c3ae"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.800.0.i686-w64-mingw32.tar.gz", "20205cf2c5873496a818e86d0340eabc07816d07627ffae26de799366fec7095"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.powerpc64le-linux-gnu.tar.gz", "1cc3c8c473e7ba1844bf9e57e7e66a9bb7f6c30f443b1dac51c4b4509b29b1d9"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-apple-darwin.tar.gz", "ff4eed72d1673c0c02fa146cc7f06574211503da39ea5784708479b5ee24e6ba"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.0.x86_64-linux-gnu.tar.gz", "ddfbe8524ae936280551fabf5d5567112e06471cc2407f1ab4319e6817b40c52"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.0.x86_64-linux-musl.tar.gz", "02ec8d4830573564ce18cf68ed54c1f9835df847edbe46655fe18c399c836897"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-unknown-freebsd.tar.gz", "a0d81a2f5f8d8c8a4de0346bce30d07b7603a60b504765adc827a4fb6ddb73c5"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.800.0.x86_64-w64-mingw32.tar.gz", "15ff5bb1cdfadd23a308403edf5dd53be44c6edef572e86bd1222fc3f5ea2ffb"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
