using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.800.400+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.400.aarch64-linux-gnu.tar.gz", "71c1b2310be6aab5981cc59cf4c7302b21d53df8cc42a562d35840e57f4c9de8"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.400.aarch64-linux-musl.tar.gz", "78b1646187fb081a379e2df395f3e8a7ecd38d35dc69eb8dbc0a389216cce190"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.400.armv7l-linux-gnueabihf.tar.gz", "307d3261b50e9de632cc0e459ed8ee062ed28c6af1ce02d647005630e48f576d"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.800.400.armv7l-linux-musleabihf.tar.gz", "b00cc7cb99b141658ccef9ea08589a93939cf41abc05eb2f2213584e23ab4cae"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.400.i686-linux-gnu.tar.gz", "ed3c18a3738e75d4c4283734a81c56aa187b86b63aa9219b3811267f1630c0ce"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.800.400.i686-linux-musl.tar.gz", "bc5a38e9b4d553ccceb2e989413f8650d79a38e3a9d467c77f57c66a35b7cd77"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.800.400.i686-w64-mingw32.tar.gz", "ffdd533fa177d9d8699cab25c9478a00f3c2410522f4e601d1230ef973ba902b"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.400.powerpc64le-linux-gnu.tar.gz", "3c8b205918c3a603f59df5cd17058dcfabb77955a5ddf3eeaea58adfaf84eab7"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.800.400.x86_64-apple-darwin.tar.gz", "d82e002c08f7f888656a110b3c8ae3c6073954f4cf08b4fe6519e27c3a77dec7"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.800.400.x86_64-linux-gnu.tar.gz", "641d947c822909a0ef7b042497229384398727f470826a0012280cb9046d833d"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.800.400.x86_64-linux-musl.tar.gz", "d8e086b9437e8b60d39694d58ac126e3ba70e6a3f050edd7609e697cb3d5b51a"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.800.400.x86_64-unknown-freebsd.tar.gz", "9d0cf3d193468a9323f6aa1dded757044eba68f0d2e623f5fdbd03f6e3d18140"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.800.400.x86_64-w64-mingw32.tar.gz", "7fdd981283d4a74ae47616ac1d507df9693170ce9c0d48028d21b3f3ffa21eee"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
