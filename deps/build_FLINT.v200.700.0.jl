using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libflint"], :libflint),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/FLINT_jll.jl/releases/download/FLINT-v200.700.0+0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.0.aarch64-linux-gnu.tar.gz", "19144bc4c528a1ac220650a43b449872f8cd8eb313a1dcd941831c2c37c5d282"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FLINT.v200.700.0.aarch64-linux-musl.tar.gz", "322f223f3d598d4242c756c90d9b7ba2bbe23c18f2859c9b3ce717219d0ed920"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.700.0.armv7l-linux-gnueabihf.tar.gz", "a8d3acfeca3086a3fcbd31dfe830ae6f42f08d8ce4227d433bd488e86e42378b"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FLINT.v200.700.0.armv7l-linux-musleabihf.tar.gz", "de4bae429a54baefe0ec1a1d12e29e7d377b908f0909ddefb89b33a89f8b4ec6"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.0.i686-linux-gnu.tar.gz", "59306f1de33d98db074b0ab88719b18ea104dfffa2d0b2847729dbe1ee410119"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FLINT.v200.700.0.i686-linux-musl.tar.gz", "560e6732bb0157720aa6ca9ff13b25cbadcecdee7efda0df62b889d516b5f1ef"),
    Windows(:i686) => ("$bin_prefix/FLINT.v200.700.0.i686-w64-mingw32.tar.gz", "95993643a90eeee855cce5a1d3cfbb75012e392861f09aea5252cc50a186ea2d"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.0.powerpc64le-linux-gnu.tar.gz", "229a5e87118fe62cb9eacbacffa65866b503936aec2adcd0582b476380cc0352"),
    MacOS(:x86_64) => ("$bin_prefix/FLINT.v200.700.0.x86_64-apple-darwin.tar.gz", "689188e19996f0ba4c6e8d255ef52ad2409d2bc1419585bb5e982bbbe97db863"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FLINT.v200.700.0.x86_64-linux-gnu.tar.gz", "108b501ff15353b1166878bfab5be41e835fe601b461432ae82cf83992572baf"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FLINT.v200.700.0.x86_64-linux-musl.tar.gz", "4fa08e783194a906c077d211c2e0efadd5397d362d21e9075409284c8f74b23a"),
    FreeBSD(:x86_64) => ("$bin_prefix/FLINT.v200.700.0.x86_64-unknown-freebsd.tar.gz", "de711c6528a473b28ec73d685db18b6cc4bb5911fb4ebc2402039dfbbdf5f431"),
    Windows(:x86_64) => ("$bin_prefix/FLINT.v200.700.0.x86_64-w64-mingw32.tar.gz", "726b7a6d80861e929dd1ad5d1082a97b9c06173f4cdb91e8e0e2d130e2464795"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
